<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Brilliun]]></title>
  <link href="http://brilliun.github.com/atom.xml" rel="self"/>
  <link href="http://brilliun.github.com/"/>
  <updated>2012-11-17T00:40:38+08:00</updated>
  <id>http://brilliun.github.com/</id>
  <author>
    <name><![CDATA[brilliun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[The Ruby Programming Language - Chapter 2]]></title>
<link href="http://brilliun.github.com/2012/11/14/the-ruby-programming-language-chapter-2/"/>
<updated>2012-11-14T20:39:00+08:00</updated>
<id>http://brilliun.github.com/2012/11/14/the-ruby-programming-language-chapter-2</id>

      <content type="html"><![CDATA[<h2>Identifiers</h2>

<p>Identifiers that begin with a captial letter A-Z are constants, and the Ruby interpreter will issue a warning (but not an error) if you alter the value of such an identifier.</p>

<h3>Punctuation in identifiers</h3>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vg">$files</span>        <span class="c1"># A global variable</span>
</span><span class='line'><span class="vi">@data</span>         <span class="c1"># An instance variable</span>
</span><span class='line'><span class="vc">@@counter</span>     <span class="c1"># A class variable</span>
</span><span class='line'><span class="n">empty?</span>        <span class="c1"># A boolean-valued method or predicate</span>
</span><span class='line'><span class="n">sort!</span>         <span class="c1"># A mutator method that alter the object</span>
</span><span class='line'><span class="n">timeout</span><span class="o">=</span>      <span class="c1"># A method invoked by assignment</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Whitespaces</h2>

<h3>Newlines as statement terminators</h3>

<p>Semicolons are not required to terminate statements. It can be omitted.</p>

<p>Without explicit semicolons, Ruby interpreter figure out on its own where statements end:</p>

<ol>
<li>For a syntactically complete statement, Ruby uses the newline as the terminator;</li>
<li>If the statement is not complete, Ruby continues parsing the statement on the next line.</li>
<li>(For Ruby 1.9) If the first character on a line is a period(.), then the line is considered a continuation line.</li>
</ol>


<p>Be careful about the &#8220;newline terminator&#8221; when your statement doesn&#8217;t fit on a single line.
For example:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>total = x +    # Incomplete expression, parsing continues
</span><span class='line'>  y            # Adds x and y and assigns the sum to total</span></code></pre></td></tr></table></div></figure>


<p>While in another case:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>total = x    # This is a complete expression
</span><span class='line'>  + y        # A useless but complete expression</span></code></pre></td></tr></table></div></figure>


<p>Escaping a line break with a blackslash can safely prevent unexpected terminating:</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>total = x \
</span><span class='line'>  + y</span></code></pre></td></tr></table></div></figure>



<p><a rel="bookmark" href="http://brilliun.github.com/2012/11/14/the-ruby-programming-language-chapter-2/">&#9875; Permalink</a></p>]]></content>
    </entry>
  
</feed>
